{
  "id" : "111-question-answering-dual-fields",
  "stages" : [ {
    "id" : "39cd7095-03e4-436f-8bc1-c10fa3abdf48",
    "rows" : 10,
    "start" : 0,
    "sortOrder" : [ ],
    "queryFields" : [ ],
    "returnFields" : [ "*", "compressed_document_vector_s", "document_clusters_ss" ],
    "returnScore" : true,
    "type" : "search-fields",
    "skip" : false
  }, {
    "id" : "37588cda-1e21-4195-9eb9-c9eb21a2aa76",
    "rowsFromSolrToRerank" : 500,
    "type" : "fusion-reranking",
    "skip" : false
  }, {
    "id" : "1ed81150-a3a6-4c58-9476-395dc063b8f5",
    "serviceId" : "ml-model-service",
    "modelId" : "change-me",
    "failOnError" : false,
    "inputScript" : "/* \nModel input construction. \n*/\nvar modelInput = new java.util.HashMap()\nmodelInput.put(\"text\", request.getFirstParam(\"q\"))\nmodelInput.put(\"pipeline\", \"query\")\nmodelInput.put(\"compress\", \"false\")\nmodelInput.put(\"unidecode\", \"true\")\nmodelInput.put(\"lowercase\", \"false\")\n\nmodelInput",
    "outputScript" : "/*\nDocument clusters Solr field name. If clustering is used then Filter Query is \nconstructed against this field to return all documents that have the same clusters as \nquery. This concept is similar to Inverted File Index (IVF).\n\nNOTE: Only models from the training module support clustering.\n*/\nvar documentClustersField = \"question_clusters_is\"\n\n/*\nVariable `numClusters` specifies how many top clusters should be used for each query.\nThe value should be less or equal to the value in the training configuration. \nBy default it's set to 0 which means that clustering isn't used. If you want to use \nclustering, value 10 is a good choice for most cases. \n*/\nvar numClusters = 0\n\n/*\nModel output parsing.\n*/\nvar queryVector = modelOutput.get(\"vector\").stream().mapToDouble(function(d){return d}).toArray()\ncontext.put(\"query_vector\", queryVector)\n\nif (numClusters > 0 && modelOutput.containsKey(\"clusters\")) {\n    clusters = Java.from(modelOutput.get(\"clusters\").subList(0, numClusters))\n    if (clusters.length > 1) {\n      fq = documentClustersField+\":(\"+clusters.join(' OR ')+\")\"\n    } else {\n      fq = documentClustersField+\":\"+clusters[0]\n    }\n    \n    request.putSingleParam(\"q\", \"*:*\")\n    request.addParam(\"fq\", fq)\n}",
    "requiredLicensedCapability" : "fusion.ai",
    "type" : "ml-query",
    "skip" : false,
    "label" : "Query Encoding"
  }, {
    "id" : "d8ac4b85-89a2-4105-8659-4ccf60f9f8e2",
    "inputParam" : "q",
    "stopWords" : "a,about,actual,actually,am,an,and,answer,any,anyone,anything,anyway,are,ask,asked,asking,at,away,based,basically,be,been,being,btw,by,can,consider,considered,could,did,do,does,doing,done,especially,essentially,etc,feel,find,for,found,from,generally,get,getting,give,given,giving,go,goes,gone,got,guess,had,happen,happened,happening,has,have,having,he,hello,help,hence,her,here,hers,hey,him,his,hope,hoped,however,i,I'd,i'm,'m,'ll,'d,ie,if,im,in,into,is,it,its,just,keeping,kept,knew,know,let,like,likely,list,look,looked,looking,makes,making,maybe,me,mention,mentioned,might,mind,much,my,need,needed,of,off,on,onto,otherwise,our,ours,out,perhaps,please,possible,possibly,pretty,probably,provide,provided,question,quite,rather,really,regard,regarding,relatively,said,saw,say,saying,search,searching,see,seeing,seem,seemed,seeming,seems,seen,select,she,should,show,simply,so,some,somehow,something,specifically,still,such,suggest,suggested,sure,take,taken,taking,tell,thank,thanks,that,the,their,them,then,there,thereby,therefore,therein,these,they,thing,think,thinking,this,those,though,thought,through,throughout,thru,thus,to,too,took,totally,toward,towards,tried,try,trying,up,upon,us,use,used,using,usually,very,via,want,wanted,was,we,went,were,what,will,wish,wished,with,within,wonder,wondering,would,yet,you,your,yours",
    "type" : "stop-filter-query-stage",
    "skip" : false
  }, {
    "id" : "5f0d318e-4834-4fc1-998b-5b8676e417e6",
    "inputParam" : "q",
    "type" : "query-escaping-query-stage",
    "skip" : false
  }, {
    "id" : "5c6f831e-26f9-4990-a50e-a1618da57028",
    "httpMethod" : "POST",
    "allowFederatedSearch" : false,
    "preferredReplicaType" : "pull",
    "type" : "solr-query",
    "skip" : false,
    "responseSignalsEnabled" : true
  }, {
    "id" : "5209a588-4364-44ce-8609-52130b759e4a",
    "queryVectorContextKey" : "query_vector",
    "documentVectorField" : "compressed_question_vector_s",
    "keepDocumentVectorField" : false,
    "distanceType" : "cosine_similarity",
    "documentDistanceResultField" : "qq_distance",
    "failOnError" : false,
    "requiredLicensedCapability" : "fusion.ai.qa",
    "type" : "per-result-vectors-distance",
    "skip" : false,
    "label" : "QQ Vectors Distance"
  }, {
    "id" : "dc9d4d2a-db16-41f3-b312-c19e1b401f57",
    "queryVectorContextKey" : "query_vector",
    "documentVectorField" : "compressed_answer_vector_s",
    "keepDocumentVectorField" : false,
    "distanceType" : "cosine_similarity",
    "documentDistanceResultField" : "qa_distance",
    "failOnError" : false,
    "requiredLicensedCapability" : "fusion.ai.qa",
    "type" : "per-result-vectors-distance",
    "skip" : false,
    "label" : "QA Vectors Distance"
  }, {
    "id" : "eb5155bf-f978-4628-9271-2da4c30e4f1a",
    "expression" : "0.2 * score / max_score + 0.4 * qq_distance + 0.4 * qa_distance",
    "resultFieldName" : "ensemble_score",
    "requiredLicensedCapability" : "fusion.ai.qa",
    "type" : "response-math-expression",
    "skip" : false
  }, {
    "id" : "92094e3b-36c7-453f-bebb-2a0aaca2a91e",
    "sortField" : "ensemble_score",
    "sortOrder" : "desc",
    "failOnError" : false,
    "type" : "result-doc-field-sorting",
    "skip" : false
  } ],
  "updates" : [ {
    "userId" : "admin",
    "timestamp" : "2020-08-21T12:14:44.224Z"
  } ],
  "properties" : { }
}