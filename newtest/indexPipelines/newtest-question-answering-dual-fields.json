{
  "id" : "newtest-question-answering-dual-fields",
  "stages" : [ {
    "type" : "field-mapping",
    "id" : "57268726-cfd0-48d0-8582-75898964b0a6",
    "mappings" : [ ],
    "reservedFieldsMappingAllowed" : false,
    "skip" : false
  }, {
    "type" : "solr-dynamic-field-name-mapping",
    "id" : "a51bc7fb-b8eb-4899-a6c3-257960db6788",
    "duplicateSingleValuedFields" : false,
    "fieldsToExclude" : [ ],
    "advancedTextFieldsIndexing" : true,
    "maxTextLengthForAdvancedIndexing" : 100,
    "skip" : false
  }, {
    "type" : "machine-learning",
    "id" : "0fc24ce3-21e7-43ec-b7b2-9a7456e862f6",
    "modelId" : "change-me",
    "failOnError" : false,
    "storeInContext" : false,
    "inputScript" : "/* \nName of the document field to feed into the encoder. \n*/\nvar documentFeatureField = \"question_t\"\n\n/* \nModel input construction. \n*/\nvar modelInput = new java.util.HashMap()\nmodelInput.put(\"text\", doc.getFirstFieldValue(documentFeatureField))\nmodelInput.put(\"pipeline\", \"index\")\nmodelInput.put(\"compress\", \"true\")\nmodelInput.put(\"unidecode\", \"true\")\nmodelInput.put(\"lowercase\", \"false\")\n\nmodelInput",
    "outputScript" : "/*\nName of the field to store the compressed encoded vector in the document.\n\nCompressed vector field will be added to the document only if `compress = \"true\"` was \npassed into the `modelInput`.\n*/\nvar compressedVectorField = \"compressed_question_vector_s\"\n\n/*\nName of the field to store the uncompressed encoded vector in the document.\n\nBy default uncompressed vector wouldn't be added to the document. \nChange `keepUncompressedVector` to true if you want to keep uncompressed vector.  \n*/\nvar keepUncompressedVector = false\nvar vectorField = \"question_vector_ds\"\n\n/*\nClustering fields that keep cluster IDs and distances to the clusters.\nNOTE: Only models from the training module will provide clustering fields. \n*/\nvar clustersField = \"question_clusters_is\"\nvar distancesField = \"question_distances_ds\"\n\n/*\nVariable `numClusters` specifies how many top clusters should be kept for the document.\nThe value should be less or equal to the value in the training configuration. \nThe default value of 1 is a good choice for most cases.\n*/\nvar numClusters = 1\n\n/*\nModel output parsing.\n*/\nif (modelOutput.containsKey(\"compressed_vector\")) {\n  doc.addField(compressedVectorField, modelOutput.get(\"compressed_vector\")[0])\n}\n\nif (keepUncompressedVector) {\n  doc.addField(vectorField, modelOutput.get(\"vector\"))\n}\n\nif (numClusters > 0 && modelOutput.containsKey(\"clusters\")) {\n  doc.addField(clustersField, modelOutput.get(\"clusters\").subList(0, numClusters))\n  doc.addField(distancesField, modelOutput.get(\"distances\").subList(0, numClusters))\n}",
    "storePredictedFields" : false,
    "skip" : false,
    "label" : "Question Deep Encoding"
  }, {
    "type" : "machine-learning",
    "id" : "a9035dd8-a140-4180-9a50-e8fea3785b8e",
    "modelId" : "change-me",
    "failOnError" : false,
    "storeInContext" : false,
    "inputScript" : "/* \nName of the document field to feed into the encoder. \n*/\nvar documentFeatureField = \"answer_t\"\n\n/* \nModel input construction. \n*/\nvar modelInput = new java.util.HashMap()\nmodelInput.put(\"text\", doc.getFirstFieldValue(documentFeatureField))\nmodelInput.put(\"pipeline\", \"index\")\nmodelInput.put(\"compress\", \"true\")\nmodelInput.put(\"unidecode\", \"true\")\nmodelInput.put(\"lowercase\", \"false\")\n\nmodelInput",
    "outputScript" : "/*\nName of the field to store the compressed encoded vector in the document.\n\nCompressed vector field will be added to the document only if `compress = \"true\"` was \npassed into the `modelInput`.\n*/\nvar compressedVectorField = \"compressed_answer_vector_s\"\n\n/*\nName of the field to store the uncompressed encoded vector in the document.\n\nBy default uncompressed vector wouldn't be added to the document. \nChange `keepUncompressedVector` to true if you want to keep uncompressed vector.  \n*/\nvar keepUncompressedVector = false\nvar vectorField = \"answer_vector_ds\"\n\n/*\nClustering fields that keep cluster IDs and distances to the clusters.\nNOTE: Only models from the training module will provide clustering fields. \n*/\nvar clustersField = \"answer_clusters_is\"\nvar distancesField = \"answer_distances_ds\"\n\n/*\nVariable `numClusters` specifies how many top clusters should be kept for the document.\nThe value should be less or equal to the value in the training configuration. \nThe default value of 1 is a good choice for most cases.\n*/\nvar numClusters = 1\n\n/*\nModel output parsing.\n*/\nif (modelOutput.containsKey(\"compressed_vector\")) {\n  doc.addField(compressedVectorField, modelOutput.get(\"compressed_vector\")[0])\n}\n\nif (keepUncompressedVector) {\n  doc.addField(vectorField, modelOutput.get(\"vector\"))\n}\n\nif (numClusters > 0 && modelOutput.containsKey(\"clusters\")) {\n  doc.addField(clustersField, modelOutput.get(\"clusters\").subList(0, numClusters))\n  doc.addField(distancesField, modelOutput.get(\"distances\").subList(0, numClusters))\n}",
    "storePredictedFields" : false,
    "skip" : false,
    "label" : "Answer Deep Encoding"
  }, {
    "type" : "solr-index",
    "id" : "b2dd0549-8eaa-4e99-a69e-1040688fcec3",
    "enforceSchema" : true,
    "dateFormats" : [ ],
    "params" : [ ],
    "bufferDocsForSolr" : false,
    "skip" : false
  } ],
  "properties" : { }
}